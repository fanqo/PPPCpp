1. Review
  1. 应用程序域？？其中提出了一些应用程序的概念，
  2. 命名的原则是，相同的操作有相同的名字，不同的操作有不同的名字
  3. 可以对函数、变量进行命名
  4. Shape 类表示了可以出现在 Window 中的一般性概念，将图形对象与 Window 联系起来，指定线
的类型、颜色，存放点，并知道如何绘制它们
  5. 抽象类与一般类的区别是用户不能直接使用抽象类，必须将其具体化后才能使用
  6. 可以将构成函数声名为 protected 来抽象类，或使用纯虚函数来实现 (纯虚函数必须被覆盖)
  7. 访问控制 (acess control) 控制的是对类成员的访问权限，若成员为 private，该成员的名字
只能由同类的成员来使用；若成员为 protected，该成员的名字可由同类或派生类的成员来使用；若成员
为 public，其名字可由所有函数来使用
  8. 将数据成员声明为 private 可防止意外地修改该数据成员，并将接口与具体实现分开
  9. 虚函数是在基类 (base class) 里定义的函数，该函数与派生类中的函数具有相同的名称和类型，
由基类调用该函数时实际调用派生类中的对应函数。而调用非虚函数时是调用其自身
  10. 基类，可由此类为基础派生出其它类
  11. 类的派生可由 : Base_Class 来实现
  12. object layout 指对象在内存中的存储结构
  13. 对于含有虚函数的类，可以在其派生类中相应函数加上 override 来明确表明该函数应被覆盖，
以防止虚函数未被覆盖，方便检测
  14. inheritance diagram 是一个图表，用来显示类之间的继承关系
  15. 见7
  16. 类中是 public 成员和 protected 成员可由其派生类访问
  17. 纯虚函数 (pure virtual function) 所在的基类派生出的类中一定要有函数将纯虚函数覆盖，
这样可以基类为抽象类
  18. 对函数 f，其参数的类型可以为 A，若想使得函数 f 对派生自 A 的类 A1， A2 的同名成员函
数产生不同的结果，要将基类 A 中同名成员函数声明为虚函数
  19. 将一虚成员函数声明为纯虚函数，可使得该函数所在类为一抽象类，必须具体化后才能使用
  20. overriding 指的是派生类中的成员函数将基类的同名成员函数覆盖掉
  21. interface inheritance 指的是若一函数期待类 A 做为参数，派生自 A 的类 A1， A2 均
可作为该函数的参数，可以用基类提供的界面来调用派生类的功能而不需要知道派生类；
implementation inheritance 指的是定义派生类时，可以使用基类提供的东西，从而简化派生类的实现
  22. 面向对象编程包含：类派生，虚函数，访问控制
2. Terms
  abstract class  抽象类，基类的一种，必须具体化后才能使用
  access control  访问控制，控制类的数据如何被访问到
  base class  基类，被派生的类
  derived class  派生类，继承自基类，并添加一些功能的类
  dispatch  派遣，使用基类时，其虚函数被派生类中的同名函数替代使用
  encapsulation  封装，将实现细节保持为私有，以防止对它们的直接使用
  inheritance  继承，由基类派生出派生类，派生类具有基类所有的成员，并添加一些自己的成员
  mutability  交互，谁可以使用，以及如何使用数据
  object layout  对象在内存中的存储形式
  object-oriented override  面向对象的覆盖？？？
  polymorphism  多态，同派遣 dispatch
  private  若成员为 private，该成员的名字只能由同类的成员来使用
  protected  若成员为 protected，该成员的名字可由同类或派生类的成员来使用
  public  若成员为 public，其名字可由所有函数来使用
  pure virtual function  纯虚函数，必须要被派生类中成员函数覆盖的虚函数，其形式为：
virtual 函数 =0; 构成
  subclass  子类，派生类
  superclass  父类，基类
  virtual function  虚函数，在基类 (base class) 里定义的函数，该函数与派生类中的函数具有
相同的名称和类型，由基类调用该函数时实际调用派生类中的对应函数
  virtual function call  对虚函数的调用
  virtual function table  虚函数表，用来表示被实际调用的函数的数据，基类中存有指向该数据的
指针
1. Review
  1. 不同的人可能使用不同的编程语言，从而写出的代码很有可能就不同；同样的编程语言选择不同的数据
格式，写出的代码也不相同。
  2. 关于数据，一个简单的问题就是它们是怎样存储的
  3. 可以将数据存储在array中，vector中，或将其输出至文件，用时再读入
  4. 对数据的基本操作有：存储、排序、找极值、比较、查找重复次数等
  5. 存储数据有许多方法，如vector, list, map
  6. STL sequence 是指一组数据，这组数据有开始和结束，可以从开始到结束来遍历每个元素。
  7. STL iterator 是用来指示 sequence 中元素的对象。 begin iterator 指示的元素属于
sequence，而 end iterator 指示的元素不属于该 sequence。 interator 可进行的操作有：1. 判
断两 iterator 是否相等 ==, !=; 2. 对 iterator 指示的元素引用 *; 3. 递增 ++
  8. 使用 iterator 的递增操作来移动 iterator 到下个元素，如对 iterator p 来说，++p使得
p 指示为原被指示元素的下一元素
  9. list 中 interaor 可用 -- 操作来指示前一个元素
  10. 将 interator 移过 end 可能会抛出异常
  11. doubly-linked list 支持 iterator 的 -- 操作，可移至上一个元素
  12. 将数据和算法分开，算法就可以不去关注数据的存放结构，即容器，而只需通过迭代器来访问数据，
使得对算法的设计只需关注对数据的操作，设计出更通用的算法
  13. STL是 standard template library 的缩写。STL是ISO C++标准库的一部分，它提供了一些
容器（如 vector, list, map）和通用算法（如 sort, find, accumulate）
  14. linked list 是一种数据结构，在该数据结构的两元素间插入新的元素不需要移动现有元素，一个
元素中包含一个或多个指针
  15. linked list 中的 link 是由 list 中的元素组成的一个系列
  16. insert() 插入一个元素， erase() 删除一个元素
  17. 空序列中 begin() == end()
  18. list 的迭代器支持的操作有： *, ++, ==, !=, --
  19. 可通过 for (Iterator p = container.begin(); p != container.end(); ++p) 来
遍历 container
  20. 在需要使用字符串操作，如连接或读入由空格隔开的词时，string 优于 vector
  21. 需要在大量数据元素间插入或删除元素时，使用 list 优于 vector
  22. container 指包含元素的对象，如 vector, list, map 等
  23. begin() 和 end() 均为 iterator，begin() 指向第一元素，end() 指向最后一个元素后面
  24. STL 提供的容器有：vector, list, deque, map, set, array 等
  25. iterator category 指示了 iterator 的类型：需要使用 input iterator 或 output 
iterator 时可使用 forward iterator，因为 forward iterator 既是 input iterator 又是
output iterator；同理，bidirectional iterator 可用在需使用 forward iterator 的地方，
因为 bidirectional iterator 是 forward iterator； random-acess iterator 是 
bidirectional iterator。STL 提供的 iterator 类型如上所提到 
  26. 相对于 bidirectional iterator, random-access iterator 可用 [] 来访问元素， 
iterator 可使用 + 或 - 操作，可找到两 iterator 间的距离（两 iterator 作差）
2. Terms
  algorithm  算法，对数据的处理
  array container  STL 包含内置的 array 容器，其用法为 array<T, N>，其中 T 为类型， N
为大小
  auto  可在具有初始数据的定义中使用 auto 来指定变量的类型
  begin()  是 iterator 指向容器中的第一个元素
  container  容器，包含元素的对象，如 vector， list， map 等
  contiguous  连续的
  doubly-linked list  一种数据结构，该结构中既有指向后一个元素的指针，又有指向前一个元素的
指针  
  element  元素，容器中存放的对象
  empty sequence  end iterator 和 begin iterator 相等的序列
  end()  是 iterator 指向容器中最后一个元素后面
  erase()  删除一个元素
  insert()  插入一个元素
  iteration  迭代，遍历元素？
  iterator  迭代器，是指针，指向序列中的元素
  linked list  一种数据结构，在该数据结构的两元素间插入新的元素不需要移动现有元素，一个
元素中包含一个或多个指针
  sequence  序列，一系列数据
  singly-linked list  一种数据结构，该结构中每个元素有指向后一个元素的指针
  size_type  vector 示例中对 unsigned long 取的别名，即是 unsigned long
  STL  standard template library 的缩写。STL是ISO C++标准库的一部分，它提供了一些
容器（如 vector, list, map）和通用算法（如 sort, find, accumulate）
  traversal  遍历
  using  为类型创建别名
  type alias  类型别名
  value_type  元素类型
